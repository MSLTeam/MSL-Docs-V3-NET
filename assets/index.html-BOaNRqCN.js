import{_ as p,c as d,a as n,b as e,e as i,d as t,w as r,r as s,o as u}from"./app-CCIBuIJ0.js";const m={};function h(f,a){const l=s("Plot"),o=s("VPLink");return u(),d("div",null,[a[21]||(a[21]=n('<div class="hint-container tip"><p class="hint-container-title">TIPS</p><p>请看右边的目录选择你的需求以查看~<br> 注意：就算是不推荐的端，您也可以按照个人需求使用。无论是否推荐，MSL内都提供了下载~</p></div><h2 id="纯生存" tabindex="-1"><a class="header-anchor" href="#纯生存"><span>纯生存</span></a></h2><div class="hint-container tip"><p class="hint-container-title">TIPS</p><p>此类服务端 <mark>大多都支持插件</mark> ，不支持的另外说明。</p></div><h3 id="推荐的端" tabindex="-1"><a class="header-anchor" href="#推荐的端"><span>推荐的端</span></a></h3><ul><li><p><mark>Paper端</mark>，老牌的基于Spigot的高性能Fork端，对于性能和特性都有不错的优化！美中不足是修改了一些原版的特性，比如TNT复制等（但是这是可以关闭的）。</p></li><li><p>Purpur端，官方说性能比Paper更好，但是部分优化可能不太合适全部人，可以尝试。</p></li><li><p>Leaves端，基于Paper的一款新服务端，只有1.19+的版本，可以尝试。</p></li></ul><h3 id="多线程服务端" tabindex="-1"><a class="header-anchor" href="#多线程服务端"><span>多线程服务端</span></a></h3>',6)),e("ul",null,[e("li",null,[a[1]||(a[1]=i("Folia端，一款支持多线程的服务端，",-1)),a[2]||(a[2]=e("strong",null,"不支持已有大部分插件",-1)),a[3]||(a[3]=i("，电脑性能差可选择！",-1)),t(l,null,{default:r(()=>[...a[0]||(a[0]=[i("（洋垃圾救星？）",-1)])]),_:1})])]),a[22]||(a[22]=e("h3",{id:"不推荐的端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#不推荐的端"},[e("span",null,"不推荐的端")])],-1)),e("ul",null,[a[10]||(a[10]=e("li",null,"Bukkit端，插件端老祖，但是优化很少，不推荐。",-1)),a[11]||(a[11]=e("li",null,"Spigot端，也算是插件端老祖了，优化也很少，不推荐。",-1)),e("li",null,[a[5]||(a[5]=i("Vanilla端（即原版官方服务端），",-1)),a[6]||(a[6]=e("mark",null,[e("strong",null,"不支持插件")],-1)),a[7]||(a[7]=i("，",-1)),a[8]||(a[8]=e("mark",null,"无额外优化",-1)),a[9]||(a[9]=i("，不推荐。",-1)),t(l,null,{default:r(()=>[...a[4]||(a[4]=[i("（当然，你要追求原汁原味也不是不行）",-1)])]),_:1})])]),a[23]||(a[23]=n('<h2 id="插件与模组混合服" tabindex="-1"><a class="header-anchor" href="#插件与模组混合服"><span>插件与模组混合服</span></a></h2><div class="hint-container important"><p class="hint-container-title">注意！</p><p>请注意：由于各种原因，<mark>非常不推荐将客户端模组</mark> 加入服务端（特别是这种模组+插件的端），可能会导致一大堆的Mixin错误！</p><p>因此，您可能需要手动清理部分客户端模组。</p></div><h3 id="推荐的端-1" tabindex="-1"><a class="header-anchor" href="#推荐的端-1"><span>推荐的端</span></a></h3><ul><li><mark>Arclight端</mark>，高版本的模组+插件端首选，兼容性较好，更换Forge版本也挺方便。</li><li><mark>Mohist/Youer端</mark>，较老牌的一款模组+插件端，支持版本丰富，更新频率快，新出的NeoForge也支持了，可以选用。</li><li>Catserver端，在1.12.2的版本支持比较好，高版本建议选用上面这俩。</li></ul><h3 id="不推荐的端-1" tabindex="-1"><a class="header-anchor" href="#不推荐的端-1"><span>不推荐的端</span></a></h3>',5)),e("p",null,[t(l,null,{default:r(()=>[...a[12]||(a[12]=[i("似乎没有。",-1)])]),_:1})]),a[24]||(a[24]=n('<h2 id="仅模组服-不含插件" tabindex="-1"><a class="header-anchor" href="#仅模组服-不含插件"><span>仅模组服（不含插件）</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提醒</p><p>以下端均 <mark>不支持插件</mark> ！</p></div><h3 id="推荐的端-2" tabindex="-1"><a class="header-anchor" href="#推荐的端-2"><span>推荐的端</span></a></h3><ul><li><p><mark>NeoForge端</mark>，1.21+版本模组大部分都是支持这个哩，相比混合端 <mark>稳定性比较高</mark> 。</p></li><li><p>Forge端，老东西了，没啥可说，1.20.x及其更低版本基本用这个，稳定性会比模组插件混合端要好。</p></li></ul><h3 id="其它端" tabindex="-1"><a class="header-anchor" href="#其它端"><span>其它端</span></a></h3><ul><li>Fabric端，新生的模组加载器，但是部分大型模组的支持似乎不太好，只推荐开小型模组服务器，不推荐开大型模组服务器。（交流群内出现过很多次Fabric服务端产生的诸多问题）。</li></ul><h3 id="不推荐的端-2" tabindex="-1"><a class="header-anchor" href="#不推荐的端-2"><span>不推荐的端</span></a></h3><ul><li>Quilt端，基于Fabric的一款模组加载器，使用的人似乎不多，加上Fabric端的已有问题，不推荐。</li></ul><h2 id="代理端" tabindex="-1"><a class="header-anchor" href="#代理端"><span>代理端</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提醒</p><p>以下端为代理端，用于架设 <mark>群组服务端</mark> ，如您没有这个需求，那么，就别看了。</p></div><h3 id="推荐的端-3" tabindex="-1"><a class="header-anchor" href="#推荐的端-3"><span>推荐的端</span></a></h3><ul><li><mark>Velocity端</mark>，基于Bungeecord，并进行优化。</li><li><mark>Lightfall端</mark> ，对于Forge进行了优化。</li><li>Waterfall端，就是停更了。</li></ul><h3 id="其他端" tabindex="-1"><a class="header-anchor" href="#其他端"><span>其他端</span></a></h3>',13)),e("ul",null,[e("li",null,[a[14]||(a[14]=i("Bungeecord端，代理端老祖，由于代理端本身功能不多，",-1)),t(l,null,{default:r(()=>[...a[13]||(a[13]=[i("用用也没事",-1)])]),_:1}),a[15]||(a[15]=i("。",-1))])]),a[25]||(a[25]=n('<h2 id="基岩版服务端" tabindex="-1"><a class="header-anchor" href="#基岩版服务端"><span>基岩版服务端</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提醒</p><p>以下端为基岩版Bedrock服务端，支持跨平台的那个MC版本。</p></div><h3 id="推荐的端-4" tabindex="-1"><a class="header-anchor" href="#推荐的端-4"><span>推荐的端</span></a></h3>',3)),e("ul",null,[e("li",null,[a[17]||(a[17]=i("BDS官方端，开服参照这里→ ",-1)),t(o,{href:"/docs/mc-server/launch-bds/"},{default:r(()=>[...a[16]||(a[16]=[i("基岩版开服教程",-1)])]),_:1}),a[18]||(a[18]=i("。",-1))]),a[19]||(a[19]=e("li",null,"BDS官方端+LiteLoader，官方端+外置插件加载器，开基岩版优先使用（如果版本支持）！",-1)),a[20]||(a[20]=e("li",null,"用Geyser转接，采用Java的特性。",-1))]),a[26]||(a[26]=e("h3",{id:"不推荐的端-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#不推荐的端-3"},[e("span",null,"不推荐的端")])],-1)),a[27]||(a[27]=e("ul",null,[e("li",null,"Nukkit端，支持插件，但是丢失了很多原版特性。")],-1))])}const k=p(m,[["render",h]]),b=JSON.parse('{"path":"/docs/mc-server/choose-server-tips/","title":"如何选择服务端","lang":"zh-CN","frontmatter":{"icon":"lightbulb","title":"如何选择服务端","createTime":"2025/10/12 21:27:21","permalink":"/docs/mc-server/choose-server-tips/","description":"TIPS 请看右边的目录选择你的需求以查看~ 注意：就算是不推荐的端，您也可以按照个人需求使用。无论是否推荐，MSL内都提供了下载~ 纯生存 TIPS 此类服务端 大多都支持插件 ，不支持的另外说明。 推荐的端 Paper端，老牌的基于Spigot的高性能Fork端，对于性能和特性都有不错的优化！美中不足是修改了一些原版的特性，比如TNT复制等（但是这...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何选择服务端\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-14T11:18:23.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.mslmc.cn/docs/mc-server/choose-server-tips/"}],["meta",{"property":"og:site_name","content":"MSL开服器"}],["meta",{"property":"og:title","content":"如何选择服务端"}],["meta",{"property":"og:description","content":"TIPS 请看右边的目录选择你的需求以查看~ 注意：就算是不推荐的端，您也可以按照个人需求使用。无论是否推荐，MSL内都提供了下载~ 纯生存 TIPS 此类服务端 大多都支持插件 ，不支持的另外说明。 推荐的端 Paper端，老牌的基于Spigot的高性能Fork端，对于性能和特性都有不错的优化！美中不足是修改了一些原版的特性，比如TNT复制等（但是这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-14T11:18:23.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-14T11:18:23.000Z"}]]},"readingTime":{"minutes":3.05,"words":916},"git":{"createdTime":1760280989000,"updatedTime":1760440703000,"contributors":[{"name":"xiaoyu","username":"luluxiaoyu","email":"ljy.xiaoyu@qq.com","commits":2,"avatar":"https://q.qlogo.cn/headimg_dl?dst_uin=1791123970&spec=640&img_type=jpg","url":"https://github.com/luluxiaoyu"}],"changelog":[{"hash":"64a45f0aed0be482ba176a8492bd3b82d049b2d2","time":1760440703000,"email":"ljy.xiaoyu@qq.com","author":"xiaoyu","message":"docs: 更新服务端选择教程"},{"hash":"3bfa293d1664e322a8996203bd3cf561de112a83","time":1760280989000,"email":"ljy.xiaoyu@qq.com","author":"xiaoyu","message":"移植旧版文档"}]},"autoDesc":true,"filePathRelative":"docs/mc-server/choose-server-tips.md","headers":[]}');export{k as comp,b as data};
